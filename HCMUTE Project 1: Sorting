#include<iostream>
using namespace std;
//#define ElementType int
#include<string.h>
#define Max 100
//Sap theo ma so sach
typedef struct{
	float id;
	string name;
	string type;
	int pulishedYear;
}BOOK;
#define ElementType BOOK
int count=0;
void BinaryInsertionSort(ElementType a[], int n);
void BubbleSort(ElementType a[], int n);
void enterElement(BOOK &a);
void enterElement(int &a);
void enterList(ElementType a[], int &n);
void InsertionSort(ElementType a[], int n);
bool IsGreater(BOOK a, BOOK b);
bool IsEqual(BOOK a, BOOK b);
bool IsSmaller(BOOK a, BOOK b);
bool IsGreater(int a, int b);
bool IsEqual(int a, int b);
bool IsSmaller(int a, int b);
ElementType medianOfThree(ElementType a[], int left, int right);
void printElement(int a);
void printElement(BOOK a);
void printList(ElementType a[], int n);
void QuickSort1(ElementType a[], int n, int left, int right);
void QuickSort2(ElementType a[], int n, int left, int right);
void SelectionSort(ElementType a[], int n);
void ShakerSort(ElementType a[], int n);
int main(int argc, char *argv[])
{
	BOOK a[Max];
	//int a[Max];
	int n, tmp;
	enterList(a,n);
	cout<<"\nChon kieu sap xep tang dan: "<<"\n1.Selection  sort"<<"\n2.Insertion sort"<<"\n3.Bubble sort"<<"\n4.Sharker"<<"\n5.Quick sort 1"<<"\n6.Binary insertion sort"<<"\n7.Quick sort 2"<<"\nMoi nhap so (1->7): ";
	cin>>tmp;
	switch(tmp){
		case 1:{
			SelectionSort(a,n);
			break;
		}
		case 2:{
			InsertionSort(a,n);
			break;
		}
		case 3:{
			BubbleSort(a,n);
			break;
		}
		case 4:{
			ShakerSort(a,n);
			break;
		}
		case 5:{
			QuickSort1(a,n,0,n-1);
			break;
		}
		case 6:{
			BinaryInsertionSort(a,n);
			break;
		}
		case 7:{
			QuickSort2(a,n,0,n-1);
			break;
		}
		default:
			cout<<"\nSo vua nhap khong hop le! Danh sach khong duoc sap xep! "<<"\n";
	}
	printList(a,n);
}
/*
7
23.1
C++
Programming
2020
23.2
Python
Programming
2021
22.1
Doraemon
Comic
2015
22.5
Shin
Comic
2016
16.8
Dac Nhan Tam
Education
2018
18.1
Cam nang huong nghiep sinh vien
Eduacation
2019
15.9
Personal Best B2
Eduacation
2020
*/
/*
20
1
2
3
4
5
10
9
8
7
6
-1
-2
-3
-4
-5
-10
-9
-8
-7
-6
*/
void BinaryInsertionSort(ElementType a[], int n){
	ElementType tmp;// tranh lam bien doi gia tri chen khi doi cho
	for(int i=1;i<n;i++){//gia su a[0] da co thu tu 
		tmp=a[i];
		int mid, left=0, right=i-1;
		while(left<=right){
			mid=(left+right)/2;
			if(IsSmaller(tmp,a[mid]))
				right=mid-1;
			else
				left=mid+1;
		}
		for(int j=i-1;j>=left;j--)
			a[j+1]=a[j];
		a[left]=tmp;
	}
}
void BubbleSort(ElementType a[], int n){
	for(int i=0;i<n-1;i++){// i la so lan lap
		for(int j=n-1;j>i;j--){// j la chi so phan tu dang xet
			if(IsSmaller(a[j],a[j-1]))
				swap(a[j],a[j-1]);
		}
	}
}
void enterElement(BOOK &a){
	cin>>a.id;
	cin.ignore();
	getline(cin,a.name);
	getline(cin,a.type);
	cin>>a.pulishedYear;
}
void enterElement(int &a){
	cin>>a;
}
void enterList(ElementType a[], int &n){
	cin>>n;
	for(int i=0;i<n;i++)
		enterElement(a[i]);
}
void InsertionSort(ElementType a[], int n){
	//ap dung cho mang co doan lien truoc da sap xep
	int pos, i;
	ElementType tmp;
	//tmp tranh ghi de khi doi cho
	for(i=1;i<n;i++)//doan a[0] da xep
	{
		tmp=a[i];
		pos=i-1;//xet tu vi tri truoc vi tri dang xet
		while((pos>=0)&&(IsSmaller(tmp,a[pos]))){
			a[pos+1]=a[pos];
			pos--;
		}
		a[pos+1]=tmp;
	}
}
ElementType medianOfThree(ElementType a[], int left, int right){
    int mid = left + (right - left) / 2;
    ElementType b[3] = {a[left], a[mid], a[right]};
    InsertionSort(b, 3);
    //tra ve vi tri trung vi cua 3 phan tu: dau, cuoi, giua
    return b[1] ;
}
bool IsGreater(BOOK a, BOOK b){
	if(a.id>b.id)
		return true;
	return false;
}
bool IsSmaller(BOOK a, BOOK b){
	if(a.id<b.id)
		return true;
	return false;
}
bool IsEqual(BOOK a, BOOK b){
	if(a.id==b.id)
		return true;
	return false;
}
bool IsGreater(int a, int b){
	if(a>b)
		return true;
	return false;
}
bool IsEqual(int a, int b){
	if(a==b)
		return true;
	return false;
}
bool IsSmaller(int a, int b){
	if(a<b)
		return true;
	return false;
}
void printElement(int a){
	cout<<a<<"\n";
}
void printElement(BOOK a){
	cout<<a.id<<" - "<<a.name<<"  - "<<a.type<<" - "<<a.pulishedYear<<"\n";
}
void printList(ElementType a[], int n){
	for(int i=0;i<n;i++)
		printElement(a[i]);
}
void QuickSort1(ElementType a[], int n, int left, int right){
	int i=left, j=right;
	ElementType x=a[(left+right)/2];
	while(i<j){
		while(IsSmaller(a[i],x))
			i++;
		while(IsSmaller(x,a[j]))
			j--;
		if(i<=j){
			swap(a[i],a[j]);
			i++;
			j--;
		}		
	}
	if(left<j)
		QuickSort1(a,n,left,j);
	if(i<right)
		QuickSort1(a,n,i,right);
};
void QuickSort2(ElementType a[], int n, int left, int right){
	if(n<=1)
		return;
	ElementType median=medianOfThree(a,left,right);
	int pos = -1;
	if(IsEqual(a[left],median))
		pos = left;
	else{
		if(IsEqual(a[right],median))
			pos = right;
		else
			pos = (left+right)/2;
	}
	swap(a[left],a[pos]);//dua median len dau day
	int i=left, j=right;
	ElementType x=median;//phan tu dau tien day
	while(i<j){
		while(IsSmaller(a[i],x))
			i++;
		while(IsSmaller(x,a[j]))
			j--;
		if(i<=j){
			swap(a[i],a[j]);
			i++;
			j--;
		}		
	}
	if(left<j)
		QuickSort2(a,n,left,j);
	if(i<right)
		QuickSort2(a,n,i,right);
}
void SelectionSort(ElementType a[], int n){
	//Chon phan tu nho nhat dua len truoc
	for(int i=0;i<n-1;i++){
		int minPos=i;
		for(int j=i+1;j<n;j++)
			if(IsSmaller(a[j],a[minPos]))
				minPos=j;
		if(minPos!=i){
			ElementType tmp=a[i];
			a[i]=a[minPos];
			a[minPos]=tmp;
		}		
	}
}
void ShakerSort(ElementType a[], int n){
	//duyet theo 2 chieu: 1 chieu giam dan, 1 chieu tang dan
	int left=0, right=n-1;
	int k;// chi so phan tu hoan vi cuoi cung theo 1 chieu dang xet
	while(left<right){
		//left == right cung vi tri hoan vi cuoi cung -> dung
		int i=right;
		while(i>left){
			if(IsSmaller(a[i],a[i-1])){
				swap(a[i],a[i-1]);
				k=i;
			}
			i--;
		}
		left=k;
		
		int j=left;
		while(j<right){
			if(IsSmaller(a[j+1],a[j])){
				swap(a[j],a[j+1]);
				k=j;
			}
			j++;
		}
		right=k;
	}
}
